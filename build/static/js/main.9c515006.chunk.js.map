{"version":3,"sources":["components/CategoryComponent.js","components/NewsitemComponent.js","components/FooterComponent.js","components/NewsComponent.js","App.js","serviceWorker.js","index.js"],"names":["categories","Categories","props","categoryItems","map","category","index","activeClass","selected","toLowerCase","react_default","a","createElement","onClick","key","className","concat","isMenuOpen","Newsitem","style","backgroundImage","item","urlToImage","width","paddingTop","height","backgroundSize","href","url","title","Intl","DateTimeFormat","year","month","day","format","Date","parse","publishedAt","description","Footer","News","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoading","items","selectedCategory","page","active","toggleMenu","bind","assertThisInitialized","setState","request","console","log","_this2","arguments","length","undefined","toLocaleLowerCase","fetch","URL","then","response","json","data","articles","e","target","outerText","updateItems","NewsitemComponent","CategoryComponent","onCategorySelected","FooterComponent","Component","App","NewsComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c515006.chunk.js","sourcesContent":["import React from 'react';\n\nconst categories = ['business', 'entertainment', 'general' ,'health', 'science', 'sports' ,'technology'];\n\nfunction Categories(props) {\n    const categoryItems = categories.map((category, index) => {\n        let activeClass = (props.selected.toLowerCase() === category) ? 'active': null;\n        return( \n            <li onClick={props.onClick} key={index} className={activeClass}>{category}</li>\n        );\n    });\n    return (\n        <div className={`category ${props.isMenuOpen? 'open': 'close'}`} >\n            <ul>\n                {categoryItems}\n            </ul>\n        </div>\n    )\n};\n\nexport default Categories;","import React from 'react';\n\nconst Newsitem = (props) => {\n    let style = {\n        backgroundImage: 'url(' + props.item.urlToImage + ')',\n        width: '100%',\n        paddingTop: '56.25%',\n        height: 'auto',\n        backgroundSize: 'cover'\n    };\n    return (\n        <li className=\"item\">                      \n            <div className=\"item-image-wrapper\">\n                <div className=\"item-image\" style={style}/>\n            </div>\n            <div className=\"item-info\">\n                <a href={props.item.url} className=\"item-link\"><h2>{props.item.title? props.item.title: null}</h2></a>\n                <p className=\"date\">{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(props.item.publishedAt)))}</p>\n                <p>{props.item.description}</p>\n            </div>\n        </li>\n    );\n\n}\n\nexport default Newsitem;","import React from 'react';\n\n\nconst Footer = () => {\n    return(\n        <ul className=\"footer-links\">\n            <li>\n                <i className=\"fa fa-copyright\"></i><span> S Trivedi 2018</span>\n            </li>\n            <li>\n                <i className=\"fa fa-twitter\"></i>\n            </li>\n            <li>\n                <i className=\"fa fa-youtube\"></i>\n            </li>\n            <li>\n                <i className=\"fa fa-linkedin\"></i>\n            </li>\n            <li>\n                <i className=\"fa fa-google-plus\"></i>\n            </li>\n            <li>\n                <i className=\"fa fa-pinterest\"></i>\n            </li>\n            <li>\n                <i className=\"fa fa-github\"></i>\n            </li>\n        </ul>\n    );\n}\n\nexport default Footer;\n\n","import React, {Component} from 'react';\nimport Category from './CategoryComponent';\nimport Newsitem from './NewsitemComponent';\nimport Footer from './FooterComponent';\n\nconst URL = 'https://newsapi.org/v2/top-headlines?';\nconst APIKEY = '25e64f4712064585b7baa3b0fc3cd9e5';\nconst COUNTRY = 'us';\n\nclass News extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: null,\n            isLoading: false,\n            items: [],\n            selectedCategory: 'general',\n            page: 0,\n            active: null,\n            isMenuOpen: false\n        }\n        this.toggleMenu = this.toggleMenu.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n        this.request();\n        console.log('component did mount', this.state.selectedCategory);\n    }\n\n    request(selectedCategory='general') {\n        let category = '&category=' + selectedCategory.toLocaleLowerCase();\n        fetch(URL+'country=' + COUNTRY + '&apikey=' + APIKEY+ '&page=1'+ category)\n        .then(response => response.json())\n        .then(data => this.setState({ \n            items: data.articles\n        }))\n    }\n\n    onCategorySelected(e) {\n        if(e.target.outerText !== this.state.selectedCategory) {\n            this.setState({\n                selectedCategory: e.target.outerText\n            }, this.updateItems);\n        }\n    }\n\n    updateItems() {\n        this.request(this.state.selectedCategory);\n    }\n\n    toggleMenu() {\n        this.setState({\n            isMenuOpen: !this.state.isMenuOpen\n        })\n    }\n\n    render() {\n        if(this.state.items){\n            const items = this.state.items.map((item,index) =>{\n                return(\n                   <Newsitem item={item} key={index}/>\n                );\n            });\n            return(\n                <div className=\"maincontainer\">\n                    <div className=\"navigation\">\n                        <div className={this.state.isMenuOpen?'menu open':'menu close'} onClick={this.toggleMenu}><i className=\"fa fa-bars\"></i> Newsapp\n                        {this.state.isMenuOpen?<i className=\"fa fa-times-circle\"></i>:''}</div>\n                        <Category onClick={this.onCategorySelected.bind(this)} selected={this.state.selectedCategory} isMenuOpen={this.state.isMenuOpen}/>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"content\">\n                            <div className=\"articles\">\n                                <ul className=\"items\">\n                                    {items}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"footer\">\n                        <Footer />\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"container no-news\">No News</div>\n            );\n        }\n    }\n}\n\nexport default News;","import React, { Component } from 'react';\nimport './App.scss';\nimport News from './components/NewsComponent';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <News />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}